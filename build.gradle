plugins {
	id 'org.springframework.boot' version '2.6.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.8'
	id 'java'
	id 'jacoco'
	id 'org.sonarqube' version '3.3'
	id 'com.google.cloud.tools.jib' version '3.1.4'
	id 'maven-publish'
}

group = 'dk.pekilidi'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
	set('testcontainersVersion', "1.16.2")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.liquibase:liquibase-core'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'org.testcontainers:junit-jupiter'
}

dependencyManagement {
	imports {
		mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
	}
}

test {
	environment 'SPRING_PROFILES_ACTIVE','test'
	outputs.dir snippetsDir
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.enabled true
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				counter = 'LINE'
				value = 'COVEREDRATIO'
				minimum = 0.8
			}
		}
		rule {
			element = 'CLASS'
			excludes = ['dk.pekilidi.dod.character.model.*']
			limit {
				counter = 'BRANCH'
				value = 'COVEREDRATIO'
				minimum = 0.8
			}
		}
	}
}

asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}

publishing {
	publications {
		maven(MavenPublication) {
			groupId 'jp.skypencil'
			from components.java
		}
	}
}

sonarqube {
	properties {
		property "sonar.projectKey", "mpeki_dod"
		property "sonar.organization", "mpeki"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}

jib {
	//Why this? https://github.com/GoogleContainerTools/jib/blob/master/docs/faq.md#why-is-my-image-created-48-years-ago
	jib.container.creationTime = 'USE_CURRENT_TIMESTAMP'
	from {
		image ='adoptopenjdk:11-jre'
	}
	to {
		image = 'macp/dod'
	}
}