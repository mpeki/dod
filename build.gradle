plugins {
	id 'jacoco'
	id 'org.sonarqube' version '3.4.0.2513'
	id 'org.springframework.boot' version '2.6.8' apply false
	id 'io.spring.dependency-management' version '1.0.11.RELEASE' apply false
	id 'com.google.cloud.tools.jib' version '3.3.0' apply false
	id "com.gorylenko.gradle-git-properties" version "2.4.0-rc2"
	id 'org.siouan.frontend-jdk11' version '6.0.0' apply false
}

group = 'dk.pekilidi'

ext {
	set('snippetsDir', file("build/generated-snippets"))
	set('testcontainersVersion', "1.16.2")
}

allprojects {
	repositories { mavenCentral() }
}
subprojects {
	if (project != project(':frontend')) {
//		apply from: "$rootDir/gradle/java.gradle"
		apply from: "$rootDir/gradle/test.gradle"
		apply from: "$rootDir/gradle/liquibase.gradle"
		apply from: "$rootDir/gradle/publish.gradle"
	}

	ext {
		mavenBom = org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
	}
}

gitProperties {
	extProperty = "gitProps" // git properties will be put in a map at project.ext.gitProps
}
generateGitProperties.outputs.upToDateWhen { false }

task printGitProperties(dependsOn: 'generateGitProperties') {
	doLast {
		println "git.commit.id.abbrev=" + project.ext.gitProps['git.commit.id.abbrev']
	}
}

//asciidoctor {
//	inputs.dir snippetsDir
//	dependsOn test
//}

sonarqube {
	properties {
		property "sonar.projectKey", "mpeki_dod"
		property "sonar.organization", "mpeki"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}
