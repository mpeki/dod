# Actions used
# build-env: mpeki/build-env/pre-build@v1.0.6 (https://github.com/mpeki/build-env)
# cache: actions/cache@v4.2.3 (https://github.com/actions/cache)
# test-reporter: dorny/test-reporter@v2.1.0 (https://github.com/dorny/test-reporter)
name: Main CI
on:
  push:
    branches:
      - 'main'
      - 'develop'
  pull_request:
    branches:
      - '*'
  workflow_dispatch:
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true
env:
  USERNAME: ${{ secrets.USERNAME }}
  GITHUB_TOKEN: ${{ secrets.SEMREL_TOKEN }}
  DOCKER_USER: ${{ secrets.DOCKERHUB_USER }}
  DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: mpeki/build-env/pre-build@v1.0.6
        with:
          use-docker: false
      - name: Build backend
        run: ./dod.sh build -w api

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: mpeki/build-env/pre-build@v1.0.6
        with:
          use-java: false
      - name: Build UI docker image
        run: ./dod.sh build ui

  build-security:
    runs-on: ubuntu-latest
    steps:
      - uses: mpeki/build-env/pre-build@v1.0.6
        with:
          use-java: true
      - name: Build Security docker image
        run: ./dod.sh build -w security

  test-backend-regression:
    runs-on: ubuntu-latest
    needs: [build-backend]
    permissions:
      contents: read
      actions: read
      checks: write
    steps:
      - uses: mpeki/build-env/pre-build@v1.0.6
      - name: run regression tests
        run: ./gradlew :b:test
      - name: Cache SonarCloud packages
        if: github.event_name == 'pull_request'  && github.actor != 'dependabot[bot]'
        uses: actions/cache@4.2.3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: JUnit Report - Integration Tests
        if: success() || failure() && github.actor != 'dependabot[bot]'
        uses: dorny/test-reporter@v2.1.0
        with:
          name: Test Reports - test-backend-regression
          path: backend/build/test-results/test/*.xml
          reporter: java-junit
          fail-on-error: false

  test-backend-integration:
    runs-on: ubuntu-latest
    needs: [test-backend-regression]
    permissions:
      contents: read
      actions: read
      checks: write
    steps:
      - uses: mpeki/build-env/pre-build@v1.0.6
      - name: Build
        run: ./dod.sh build all
      - name: Integration Test
        if: github.event_name == 'pull_request' && github.actor != 'dependabot[bot]'
        run: ./gradlew :b:test -DrunTestTags="integration" --info
      - name: JUnit Report - Integration Tests
        if: github.actor != 'dependabot[bot]'
        uses: dorny/test-reporter@v2.1.0
        with:
          name: Test Reports - test-backend-integration
          path: backend/build/test-results/test/*.xml
          reporter: java-junit
          fail-on-error: false

  end-to-end-test:
    runs-on: ubuntu-latest
    needs: [ build-frontend, build-backend, build-security ]
    permissions:
      contents: read
      actions: read
      checks: write
    steps:
      - uses: mpeki/build-env/pre-build@v1.0.6
      - name: Build backend / security
        run: ./gradlew :b:test --tests '*ResourceApiDocTest' :b:build :b:jDB
      - name: Build & Test
        run: ./gradlew clean :b:jDB :sel:test -DseleniumRunMode=hub
      - name: JUnit Report - Integration Tests
        if: github.actor != 'dependabot[bot]'
        uses: dorny/test-reporter@v2.1.0
        with:
          name: Test Reports - end-to-end-test-full
          path: selenium-tests/build/test-results/test/*.xml
          reporter: java-junit
          fail-on-error: false

  release:
    if: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' }} 
    runs-on: ubuntu-latest
    needs: [end-to-end-test,test-backend-integration]
    steps:
    - uses: mpeki/build-env/pre-build@v1.0.6
      with:
        use-docker: true
        docker-user: ${{ secrets.DOCKERHUB_USER }}
        docker-password: ${{ secrets.DOCKERHUB_PASSWORD }}
    - name: Prepare semantic-release
      run: |
        npm clean-install
        git branch
    - name: Do semantic-release
      run: npx semantic-release
    - name: Build and push API Docker image
      run: ./gradlew :b:test --tests '*ResourceApiDocTest' :b:build :b:jDB
    - name: Build and push UI Docker image
      run: ./gradlew :f:pushUIC
    - name: Merge back to develop
      if: ${{ github.ref == 'refs/heads/main' }}
      run: |
        git config --global user.email "mpekilidi@gmail.com"
        git config --global user.name "mpeki"
        git fetch
        git checkout develop
        git merge origin/main -X theirs
        git push origin develop
