import java.util.stream.Collectors
import java.util.Set

import dk.dodgame.domain.changerequest.model.ChangeStatusLabel
import dk.dodgame.domain.changerequest.model.ChangeStatus
import dk.dodgame.domain.changerequest.model.ChangeRequest
import dk.dodgame.domain.changerequest.model.ChangeType
import dk.dodgame.domain.character.model.CharacterState
import dk.dodgame.domain.item.ItemService
import dk.dodgame.domain.item.ItemKey
import dk.dodgame.data.CharacterDTO
import dk.dodgame.data.ItemDTO
import dk.dodgame.data.CharacterItemDTO
import dk.dodgame.domain.item.ItemNotFoundException
import dk.dodgame.domain.item.ItemKey
import dk.dodgame.domain.item.model.Coin

global ItemService itemService;
global CharacterItemDTO charItem;
global ItemDTO storeItem;
global Integer itemCost;

rule "Validate character state (item) - character init"
  ruleflow-group "remove-item"
  salience 100
  no-loop
  when
    character : CharacterDTO( state != CharacterState.INIT_COMPLETE)
    changeRequest : ChangeRequest( changeType == ChangeType.REMOVE_ITEM_INIT_COMPLETE && status == ChangeStatus.PENDING )
  then
    changeRequest.setStatusLabel(ChangeStatusLabel.WRONG_CHARACTER_STATE);
    changeRequest.setStatus(ChangeStatus.REJECTED);
    update(changeRequest)
end;

rule "Validate item removal request - character init"
  ruleflow-group "remove-item"
  salience 100
  no-loop
  when
    character : CharacterDTO( state == CharacterState.INIT_COMPLETE )
    changeRequest : ChangeRequest( changeType == ChangeType.REMOVE_ITEM_INIT_COMPLETE && status == ChangeStatus.PENDING )
  then
    String itemName = (String)changeRequest.getModifier();
    charItem = character.getItems().get(itemName);
    if(charItem == null){
      changeRequest.setStatusLabel(ChangeStatusLabel.ITEM_NOT_IN_INVENTORY);
      changeRequest.setStatus(ChangeStatus.REJECTED);
    }
    update(changeRequest)
end;


rule "Remove Item - character init"
  salience 50
  ruleflow-group "remove-item"
  no-loop
  when
    character : CharacterDTO( state == CharacterState.INIT_COMPLETE )
    changeRequest : ChangeRequest( changeType == ChangeType.REMOVE_ITEM_INIT_COMPLETE && status == ChangeStatus.PENDING )
  then
    String itemName = (String)changeRequest.getModifier();
    charItem = character.getItems().get(itemName);
    if( charItem != null ){
      character.addCoins(charItem.getCurrentPrice() != null ? (int) Math.floor(charItem.getCurrentPrice()) : (int) Math.floor(charItem.getItem().getPrice()), Coin.SILVER_PIECE);
      character.addCoins(charItem.getCurrentPrice() != null ? (int) Math.floor(((charItem.getCurrentPrice() - Math.floor(charItem.getCurrentPrice())) * 10)) : (int) Math.floor(charItem.getItem().getPrice()), Coin.COPPER_PIECE);
      character.removeItem(CharacterItemDTO.builder()
        .itemName((String)changeRequest.getModifier())
        .item(ItemDTO.builder().itemKey((ItemKey) changeRequest.getChangeKey()).build()).build());
      changeRequest.setStatus(ChangeStatus.APPROVED);
      changeRequest.setStatusLabel(ChangeStatusLabel.OK_ITEM_REMOVED);
    } else {
      changeRequest.setStatusLabel(ChangeStatusLabel.CHANGE_REJECTED_UNKNOWN_REASON);
      changeRequest.setStatus(ChangeStatus.REJECTED);
    }
    update(changeRequest)
end;

