import dk.pekilidi.dod.data.CharacterTemplateDTO
import dk.pekilidi.dod.data.CharacterDTO
import java.util.Arrays;
import dk.pekilidi.dod.util.Dice
import dk.pekilidi.dod.data.BaseTraitRuleDTO
import dk.pekilidi.dod.data.BaseTraitDTO
import java.util.List
import java.util.Collections
import java.util.ArrayList
import dk.pekilidi.dod.character.model.CharacterState;
import dk.pekilidi.dod.character.model.AgeGroup
import dk.pekilidi.dod.character.model.BaseTraitName;
import dk.pekilidi.dod.changerequest.model.ChangeType
import dk.pekilidi.dod.changerequest.model.ChangeRequest
import dk.pekilidi.dod.changerequest.model.ChangeStatus
import dk.pekilidi.dod.changerequest.model.ChangeStatusLabel
import dk.pekilidi.dod.character.model.BaseTraitName
import dk.pekilidi.dod.changerequest.model.ChangeStatusLabel
import dk.pekilidi.dod.changerequest.model.ChangeStatus
import dk.pekilidi.dod.changerequest.model.ChangeStatusLabel

rule "Character change - Change type not implemented"
  no-loop
  ruleflow-group "character-change"
  when
    changeRequest : ChangeRequest( changeType == ChangeType.BASE_SKILL_POINTS );
  then
    changeRequest.setStatusLabel(ChangeStatusLabel.NOT_IMPLEMENTED);
    changeRequest.setStatus(ChangeStatus.REJECTED);
end;

rule "Character change - must be hero"
  no-loop
  ruleflow-group "character-change"
  when
    character : CharacterDTO( hero == false );
    changeRequest : ChangeRequest( changeType == ChangeType.BASE_TRAIT || changeType == ChangeType.HERO_POINTS || changeType == ChangeType.HIT_POINTS);
  then
    changeRequest.setStatusLabel(ChangeStatusLabel.NO_HERO);
    changeRequest.setStatus(ChangeStatus.REJECTED);
end;


rule "Character change - check hero points"
  no-loop
  ruleflow-group "character-change"
  when
    changeRequest : ChangeRequest( changeType == ChangeType.BASE_TRAIT );
    change : Integer() from changeRequest.getModifier;
    cost : Number() from change * 2
    character : CharacterDTO( state == CharacterState.INIT_COMPLETE && heroPoints - cost.intValue() < 0);
  then
    changeRequest.setStatusLabel(ChangeStatusLabel.INSUFFICIENT_HERO_POINTS);
    changeRequest.setStatus(ChangeStatus.REJECTED);
end;

rule "Character change - modify base trait"
  no-loop
  ruleflow-group "character-change"
  when
    changeRequest : ChangeRequest( changeType == ChangeType.BASE_TRAIT );
    change : Integer() from changeRequest.getModifier;
    cost : Number() from change * 2
    character : CharacterDTO( state == CharacterState.INIT_COMPLETE && heroPoints - cost.intValue() >= 0);
  then
    changeRequest.setStatus(ChangeStatus.APPROVED);
    changeRequest.setStatusLabel(ChangeStatusLabel.OK_BASE_TRAIT_MODIFICATION);
    character.setHeroPoints(character.getHeroPoints() - cost.intValue());
    BaseTraitName baseTraitName = (BaseTraitName) changeRequest.getChangeKey();
    character.incrementTrait(baseTraitName, change);
end;

rule "Character change - modify hero points"
  no-loop
  ruleflow-group "character-change"
  when
    character : CharacterDTO( state == CharacterState.INIT_COMPLETE && hero == true);
    changeRequest : ChangeRequest( changeType == ChangeType.HERO_POINTS );
    change : Integer() from changeRequest.getModifier;
  then
    changeRequest.setStatus(ChangeStatus.APPROVED);
    changeRequest.setStatusLabel(ChangeStatusLabel.OK_HERO_POINTS_INCREASE);
    character.setHeroPoints(character.getHeroPoints() + change);
end;
