apply plugin: 'io.spring.dependency-management'

configurations {
    liquibase
}

dependencies {
    implementation 'mysql:mysql-connector-java:8.0.32'
    //https://github.com/liquibase/liquibase-hibernate/blob/master/README.md
    implementation 'org.liquibase.ext:liquibase-hibernate6:4.20.0'
    implementation 'org.liquibase:liquibase-core:4.20.0'
    //https://github.com/liquibase/liquibase-gradle-plugin
    implementation 'org.liquibase:liquibase-gradle-plugin:2.2.0'
    implementation 'org.springframework.data:spring-data-jpa'

    runtimeOnly 'com.h2database:h2'
}

//loading properties file.
//Properties liquibaseProps = new Properties()
//liquibaseProps.load(new FileInputStream("src/main/resources/liquibase-task.properties"))

Properties liquibaseProps = new Properties()
liquibaseProps.load(new FileInputStream("$rootDir/gradle/liquibase.properties"))

task liquibaseDiffChangelog(type: JavaExec) {
    doFirst {
        cleanInitialSchemaFile()
    }
    group = "liquibase"


    classpath sourceSets.main.runtimeClasspath
    classpath configurations.liquibase
    mainClass = "liquibase.integration.commandline.Main"
    args "--changeLogFile=" + liquibaseProps.getProperty('changeLogFile')
    args "--referenceUrl=" + liquibaseProps.getProperty('referenceUrl')
    args "--username=" + liquibaseProps.getProperty('username')
    args "--password=" + liquibaseProps.getProperty('password')
    args "--url=" + liquibaseProps.getProperty('url')
    args "--driver=" + liquibaseProps.getProperty('driver')
    args "diffChangeLog"
}

def cleanInitialSchemaFile(){
    new File(projectDir, "src/main/resources/db/changelog/01-create-schema.yaml").text = ""
}

def buildTimestamp() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmmss')
    return formattedDate
}
